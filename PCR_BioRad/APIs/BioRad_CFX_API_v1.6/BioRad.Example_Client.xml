<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BioRad.Example_Client</name>
    </assembly>
    <members>
        <member name="T:MessageType">
            <remarks/>
        </member>
        <member name="P:MessageType.RegistrationID">
            <remarks/>
        </member>
        <member name="P:MessageType.Item">
            <remarks/>
        </member>
        <member name="T:AddRepeatsType">
            <remarks/>
        </member>
        <member name="P:AddRepeatsType.SerialNumber">
            <remarks/>
        </member>
        <member name="P:AddRepeatsType.Number">
            <remarks/>
        </member>
        <member name="T:FirmwareVersionsType">
            <remarks/>
        </member>
        <member name="P:FirmwareVersionsType.PXA270">
            <remarks/>
        </member>
        <member name="P:FirmwareVersionsType.FX2">
            <remarks/>
        </member>
        <member name="P:FirmwareVersionsType.HC12">
            <remarks/>
        </member>
        <member name="P:FirmwareVersionsType.DSP">
            <remarks/>
        </member>
        <member name="P:FirmwareVersionsType.LID">
            <remarks/>
        </member>
        <member name="T:SerialNumbersType">
            <remarks/>
        </member>
        <member name="P:SerialNumbersType.Base">
            <remarks/>
        </member>
        <member name="P:SerialNumbersType.Block">
            <remarks/>
        </member>
        <member name="P:SerialNumbersType.Shuttle">
            <remarks/>
        </member>
        <member name="P:SerialNumbersType.OpticalHead">
            <remarks/>
        </member>
        <member name="T:TemperatureUnitsType">
            <remarks/>
        </member>
        <member name="P:TemperatureUnitsType.Temperature">
            <remarks/>
        </member>
        <member name="P:TemperatureUnitsType.Units">
            <remarks/>
        </member>
        <member name="T:TemperatureUnits">
            <remarks/>
        </member>
        <member name="F:TemperatureUnits.Celcius">
            <remarks/>
        </member>
        <member name="T:VolumeUnitsType">
            <remarks/>
        </member>
        <member name="P:VolumeUnitsType.Volume">
            <remarks/>
        </member>
        <member name="P:VolumeUnitsType.Units">
            <remarks/>
        </member>
        <member name="T:VolumeUnits">
            <remarks/>
        </member>
        <member name="F:VolumeUnits.MicroLiter">
            <remarks/>
        </member>
        <member name="T:InstrumentBlockType">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.ErrorArray">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.SerialNumber">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Status">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Step">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Steps">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Cycle">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Cycles">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.SampleVolume">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.LidTemperature">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.BlockTemperature">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.EstimatedRemainingRunTime">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.NickName">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Description">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Rows">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Columns">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Letter">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Dual">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.RealTime">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Manufacturer">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.Simulated">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.RipFolder">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.MotorizedLidPosition">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.BlockID">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.ShippingScrewInstalled">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.SerialNumbers">
            <remarks/>
        </member>
        <member name="P:InstrumentBlockType.FirmwareVersions">
            <remarks/>
        </member>
        <member name="T:ErrorType">
            <remarks/>
        </member>
        <member name="P:ErrorType.DateTime">
            <remarks/>
        </member>
        <member name="P:ErrorType.ErrorCode">
            <remarks/>
        </member>
        <member name="P:ErrorType.ErrorDescriptionCurrentCulture">
            <remarks/>
        </member>
        <member name="P:ErrorType.ErrorDescriptionInvariantCulture">
            <remarks/>
        </member>
        <member name="T:StatusType">
            <remarks/>
        </member>
        <member name="F:StatusType.Idle">
            <remarks/>
        </member>
        <member name="F:StatusType.Paused">
            <remarks/>
        </member>
        <member name="F:StatusType.Running">
            <remarks/>
        </member>
        <member name="F:StatusType.InfiniteHold">
            <remarks/>
        </member>
        <member name="F:StatusType.Synchronizing">
            <remarks/>
        </member>
        <member name="F:StatusType.Calibrating">
            <remarks/>
        </member>
        <member name="F:StatusType.LidOpen">
            <remarks/>
        </member>
        <member name="F:StatusType.Initializing">
            <remarks/>
        </member>
        <member name="F:StatusType.WaitingManualStart">
            <remarks/>
        </member>
        <member name="F:StatusType.Processing">
            <remarks/>
        </member>
        <member name="F:StatusType.Preserving">
            <remarks/>
        </member>
        <member name="F:StatusType.Error">
            <remarks/>
        </member>
        <member name="F:StatusType.LocalRun">
            <remarks/>
        </member>
        <member name="T:BlockLetterType">
            <remarks/>
        </member>
        <member name="F:BlockLetterType.A">
            <remarks/>
        </member>
        <member name="F:BlockLetterType.B">
            <remarks/>
        </member>
        <member name="T:MotorizedLidPositionType">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.OPEN">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.CLOSED">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.OPENING">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.CLOSING">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.UNKNOWN">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.MANUAL">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.NONE">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.STOP">
            <remarks/>
        </member>
        <member name="F:MotorizedLidPositionType.ERROR">
            <remarks/>
        </member>
        <member name="T:SkipStepType">
            <remarks/>
        </member>
        <member name="P:SkipStepType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:QueryInstrumentBlocksType">
            <remarks/>
        </member>
        <member name="T:ShutDownType">
            <remarks/>
        </member>
        <member name="T:StopRunType">
            <remarks/>
        </member>
        <member name="P:StopRunType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:ResumeRunType">
            <remarks/>
        </member>
        <member name="P:ResumeRunType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:PauseRunType">
            <remarks/>
        </member>
        <member name="P:PauseRunType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:FlashLedType">
            <remarks/>
        </member>
        <member name="P:FlashLedType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:CloseLidType">
            <remarks/>
        </member>
        <member name="P:CloseLidType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:OpenLidType">
            <remarks/>
        </member>
        <member name="P:OpenLidType.SerialNumber">
            <remarks/>
        </member>
        <member name="T:AnalysisExportType">
            <remarks/>
        </member>
        <member name="P:AnalysisExportType.DataFile">
            <remarks/>
        </member>
        <member name="P:AnalysisExportType.OutputFile">
            <remarks/>
        </member>
        <member name="T:GenerateReportType">
            <remarks/>
        </member>
        <member name="P:GenerateReportType.Type">
            <remarks/>
        </member>
        <member name="P:GenerateReportType.DataFile">
            <remarks/>
        </member>
        <member name="P:GenerateReportType.TemplateFile">
            <remarks/>
        </member>
        <member name="P:GenerateReportType.OutputFile">
            <remarks/>
        </member>
        <member name="T:ReportTypes">
            <remarks/>
        </member>
        <member name="F:ReportTypes.txt">
            <remarks/>
        </member>
        <member name="F:ReportTypes.pdf">
            <remarks/>
        </member>
        <member name="F:ReportTypes.mht">
            <remarks/>
        </member>
        <member name="T:RunProtocolType">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.SerialNumber">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.ProtocolFile">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.PlateFile">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.Note">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.RunId">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.DataFile">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.LockInstrumentPanel">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.GenerateReportEndOfRun">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.GenerateReportType">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.GenerateReportTemplateFile">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.GenerateReportOutputFile">
            <remarks/>
        </member>
        <member name="P:RunProtocolType.EmailAddresses">
            <remarks/>
        </member>
        <member name="T:UnRegisterServiceType">
            <remarks/>
        </member>
        <member name="T:RegisterServiceType">
            <remarks/>
        </member>
        <member name="T:InstrumentBlocksType">
            <remarks/>
        </member>
        <member name="P:InstrumentBlocksType.CFXManagerVersion">
            <remarks/>
        </member>
        <member name="P:InstrumentBlocksType.User">
            <remarks/>
        </member>
        <member name="P:InstrumentBlocksType.RegistrationID">
            <remarks/>
        </member>
        <member name="P:InstrumentBlocksType.ErrorArray">
            <remarks/>
        </member>
        <member name="P:InstrumentBlocksType.BlockArray">
            <remarks/>
        </member>
        <member name="T:BioRad.Example_Client.CFXManagerClient">
            <summary>
            Copyright ©2014 Bio-Rad Laboratories, Inc. All rights reserved.
            
            This class is part of the CFX Manager API Examples kit. 
            
            It implements a low level client interface to the CFX Manager API Service.
            
            It is referenced by the CFXManagerClientWrapper class, which implements a high level client 
            interface by encapsulating the low level operations provided here within a functional
            framework suitable for consumption by business-level application logic.
            </summary>
        </member>
        <member name="T:BioRad.Example_Client.CFXManagerClient.SubscribedServiceEvents">
             <summary>
            The OnServiceIsClosing call back event is not currently implemented, but a stub instance context 
            for it is required in order to create the client.
             </summary>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.SubscribedServiceEvents.OnServiceIsClosing">
             <summary>
            Stub for the OnServiceIsClosing call-back event
             </summary>
        </member>
        <member name="F:BioRad.Example_Client.CFXManagerClient.m_Client">
            <summary>
            The client instance
            </summary>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.SetResponseTimeOut(System.Int32)">
            <summary>
            Adjust the service response time-out. A consuming application may want to adjust this to account for 
            special cases where it either wants to ignore predicted time-outs, or handle special-case transactions 
            with response times that fall beyond the optimal default setting. 
            </summary>
            <param name="time_out_seconds">
            The time in seconds allowed for a transaction to complete before a service time-out exception is generated.
            </param>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.CreateClient">
            <summary>
            Create the client using the stub instance context SubscribedServiceEvents defined above
            </summary>
            <returns>true IFF the client communications channel was successfully created and opened</returns>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.AbortClient">
            <summary>
            Abort the client if it is not null. 
            </summary>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.IsConnected">
            <summary>
            Ping method for use by consumers to verify that the client is connected to the service
            (exists and is opened)
            </summary>
            <returns>true IFF the client is connected to the service</returns>
        </member>
        <member name="M:BioRad.Example_Client.CFXManagerClient.SendServiceRequest(System.String)">
            <summary>
            Send a service request
            </summary>
            <param name="request">An xml service request conforming to the API schema</param>
            <returns>An xml service response message conforming to the API schema </returns>
        </member>
        <member name="T:ISOCFXCommandService">
            <summary/>
        </member>
        <member name="M:ISOCFXCommandService.SubscribeToServiceIsClosing">
            <summary/>
        </member>
        <member name="M:ISOCFXCommandService.XmlCommand(System.String)">
            <summary/>
        </member>
        <member name="T:ISOCFXCommandServiceCallback">
            <summary/>
        </member>
        <member name="M:ISOCFXCommandServiceCallback.OnServiceIsClosing">
            <summary/>
        </member>
        <member name="T:ISOCFXCommandServiceChannel">
            <summary/>
        </member>
        <member name="T:SOCFXCommandServiceClient">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.#ctor(System.ServiceModel.InstanceContext)">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.#ctor(System.ServiceModel.InstanceContext,System.String)">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.SubscribeToServiceIsClosing">
            <summary/>
        </member>
        <member name="M:SOCFXCommandServiceClient.XmlCommand(System.String)">
            <summary/>
        </member>
    </members>
</doc>
